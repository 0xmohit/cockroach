// Code generated by "stringer -type=VersionKey"; DO NOT EDIT.

package cluster

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Version2_1-0]
	_ = x[VersionLoadSplits-1]
	_ = x[VersionExportStorageWorkload-2]
	_ = x[VersionLazyTxnRecord-3]
	_ = x[VersionSequencedReads-4]
	_ = x[VersionUnreplicatedRaftTruncatedState-5]
	_ = x[VersionCreateStats-6]
	_ = x[VersionDirectImport-7]
	_ = x[VersionSideloadedStorageNoReplicaID-8]
	_ = x[VersionPushTxnToInclusive-9]
	_ = x[VersionSnapshotsWithoutLog-10]
	_ = x[Version19_1-11]
	_ = x[VersionStart19_2-12]
	_ = x[VersionQueryTxnTimestamp-13]
	_ = x[VersionStickyBit-14]
	_ = x[VersionParallelCommits-15]
}

const _VersionKey_name = "Version2_1VersionLoadSplitsVersionExportStorageWorkloadVersionLazyTxnRecordVersionSequencedReadsVersionUnreplicatedRaftTruncatedStateVersionCreateStatsVersionDirectImportVersionSideloadedStorageNoReplicaIDVersionPushTxnToInclusiveVersionSnapshotsWithoutLogVersion19_1VersionStart19_2VersionQueryTxnTimestampVersionStickyBitVersionParallelCommits"

var _VersionKey_index = [...]uint16{0, 10, 27, 55, 75, 96, 133, 151, 170, 205, 230, 256, 267, 283, 307, 323, 345}

func (i VersionKey) String() string {
	if i < 0 || i >= VersionKey(len(_VersionKey_index)-1) {
		return "VersionKey(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _VersionKey_name[_VersionKey_index[i]:_VersionKey_index[i+1]]
}
