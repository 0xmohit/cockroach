# LogicTest: 5node-dist

# The following tables form the interleaved hierarchy:
#   name:             primary key:                # rows:   'a' = id mod X :
#   parent1           (pid1)                      40        8
#     child1          (pid1, cid1)                150       66
#       grandchild1   (pid1, cid1, gcid1)         410       201
#     child2          (pid1, cid2, cid3)          15        7
#       grandchild2   (pid1, cid2, cid3, gcid2)   51        13
#   parent2           (pid2)                      5         2
# Additional rows in child1, child2, and grandchild1 with no corresponding
# parent row are also inserted.
#
# All IDs belonging to a table (pid1 --> parent1, cid1 --> child1, cid2,cid3
# --> child2, etc.) start from 1 up to (# rows).
# Foreign keys are modded by their ancestor's (# rows). For example, for child1
# row with cid1=500, we take ((cid1-1) % 200 + 1) = 100 as pid1.
# One exception is cid3, which is taken as cid2 % 15.
# There's a column 'a' that's modded by a factor.
#
# This allows us to test the following edge cases (in order of tests):
#   - one-to-many (parent1 - child1)
#   - one-to-one and one-to-none (parent1 - child2)
#   - parent-grandchild (parent1 - grandchild1)
#   - multiple interleaved columns (child2 - grandchild2)
#   - additional ancestor above (child2 - grandchild2)
#   - no interleaved relationship (parent1 - parent2, parent2 - child1)
#   - TODO(richardwu): sibling-sibling (child1 - child2)

#################
# Create tables #
#################

statement ok
CREATE TABLE parent1 (pid1 INT PRIMARY KEY, pa1 INT)

statement ok
CREATE TABLE parent2 (pid2 INT PRIMARY KEY, pa2 INT)

statement ok
CREATE TABLE child1 (
  pid1 INT,
  cid1 INT,
  ca1 INT,
  PRIMARY KEY(pid1, cid1)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE child2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  ca2 INT,
  PRIMARY KEY(pid1, cid2, cid3)
)
INTERLEAVE IN PARENT parent1 (pid1)

statement ok
CREATE TABLE grandchild1 (
  pid1 INT,
  cid1 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY(pid1, cid1, gcid1)
)
INTERLEAVE IN PARENT child1 (pid1, cid1)

# No foreign key since we are permitting the rows to overflow out of child2
# for pid1 > 15.
statement ok
CREATE TABLE grandchild2 (
  pid1 INT,
  cid2 INT,
  cid3 INT,
  gcid2 INT,
  gca2 INT,
  PRIMARY KEY(pid1, cid2, cid3, gcid2)
)
INTERLEAVE IN PARENT child2 (pid1, cid2, cid3)

####################
# Split our ranges #
####################

# Prevent the merge queue from immediately discarding our splits.
statement ok
SET CLUSTER SETTING kv.range_merge.queue_enabled = false;

# Split at parent1 key into five parts.
statement ok
ALTER TABLE parent1 SPLIT AT SELECT i FROM generate_series(8, 32, 8) AS g(i)

# Split at child1 keys in between parent1 parts (total 10 parts).
statement ok
ALTER TABLE child1 SPLIT AT SELECT pid1, pid1 + 40 FROM
generate_series(4, 36, 8) AS g(pid1)

# Split at grandchild2 keys in between the 10 parts (total 20 parts).
statement ok
ALTER TABLE grandchild2 SPLIT AT SELECT pid1, pid1 + 40, pid1, pid1 FROM
generate_series(2, 38, 4) AS g(pid1)

# Relocate the twenty parts to the five nodes.
statement ok
ALTER TABLE grandchild2 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[((i-1)/2)::INT%5+1], i, i+20, i, i FROM generate_series(1, 39, 2) AS g(i)

# Verify data placement.
query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE parent1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE child1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE grandchild1]
----
start_key                   end_key                     replicas  lease_holder
NULL                        /2/#/56/1/42/2/#/58/1/2     {1}       1
/2/#/56/1/42/2/#/58/1/2     /4/#/55/1/44                {2}       2
/4/#/55/1/44                /6/#/56/1/46/6/#/58/1/6     {3}       3
/6/#/56/1/46/6/#/58/1/6     /8                          {4}       4
/8                          /10/#/56/1/50/10/#/58/1/10  {5}       5
/10/#/56/1/50/10/#/58/1/10  /12/#/55/1/52               {1}       1
/12/#/55/1/52               /14/#/56/1/54/14/#/58/1/14  {2}       2
/14/#/56/1/54/14/#/58/1/14  /16                         {3}       3
/16                         /18/#/56/1/58/18/#/58/1/18  {4}       4
/18/#/56/1/58/18/#/58/1/18  /20/#/55/1/60               {5}       5
/20/#/55/1/60               /22/#/56/1/62/22/#/58/1/22  {1}       1
/22/#/56/1/62/22/#/58/1/22  /24                         {2}       2
/24                         /26/#/56/1/66/26/#/58/1/26  {3}       3
/26/#/56/1/66/26/#/58/1/26  /28/#/55/1/68               {4}       4
/28/#/55/1/68               /30/#/56/1/70/30/#/58/1/30  {5}       5
/30/#/56/1/70/30/#/58/1/30  /32                         {1}       1
/32                         /34/#/56/1/74/34/#/58/1/34  {2}       2
/34/#/56/1/74/34/#/58/1/34  /36/#/55/1/76               {3}       3
/36/#/55/1/76               /38/#/56/1/78/38/#/58/1/38  {4}       4
/38/#/56/1/78/38/#/58/1/38  NULL                        {5}       5

statement ok
SET CLUSTER SETTING sql.distsql.interleaved_joins.enabled = true;

#####################
# Interleaved joins #
#####################

# Select over two ranges for parent/child with split at children key.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMUsFu00AQvfMVq3eKYVC9Dr1YiuSKGnAVnOIUgVR8sLzT1JLrNbtrBKry78jeSDgVVMCpN8-89-b5zc497NcWMbbpOn19JQbTijfF5r24Tj9frs-yXCzOs-3V9sM6EAfKc0_oK8Odk-Jik-Wivm1aJcXHbZa_FYu-UTIQn96lReoL8WUIwyWvxDIQZ_n5vFmvxGlQgtBpxXl1xxbxNSQIEQhLlITe6Jqt1WaE7idipr4jDglN1w_Ot13jWkaModNGsWEFgmJXNe2Il_uSUGvDiH9Rc_1S9yfRAyJBD-4wtiRYV-0YcbSnmbWcWf9mcNY5Ni1X37jgSrG50E3H5iQ8csKabxzGeM1dZX4kh4WCUDS72znitwuCnwNCyzdukcgXwcqM3OkThM3gYpFISiJKXlFyij-lkUdpov9KI59omvDxNAXbXneW_-rVw_FsWO3Y35jVg6n50uh6svHlZtJNDcXWeXTpi6zz0PiDc7F8VBweieVDcfRP4nL_7GcAAAD__-nTPX0=

# Swap parent1 and child1 tables.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN parent1 USING(pid1) WHERE pid1 >= 3 AND pid1 <= 5]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMUtFulEAUffcrJuep6DVlIH0h2YTGotKsbGVrNKk8EOZ2S0IZnBmMptl_NzCbyDbaqE--ce855x7OnfsA-6VDgm22zl5di9F04nW5eSdusk9X6_O8ECcX-fZ6-34diAPluSc0d22npLjc5IUYasO9k-LDNi_eiJOhVTIQH99mZeYL8XkMw5hXIg7EeXGxbDYrcRZUIPRacVHfs0VyAwlCBEKMijAY3bC12kzQw0zM1TckIaHth9H5tmtdx0gw9tooNqxAUOzqtpvwal8RGm0YyU9qoV_q4TR6RCTo0R3GVgTr6h0jifa0sJYL618MznvHpuP6K5dcKzaXuu3ZnIZHTljzrcMUr72vzffULxSEst3dLYHDdkHwc0Do-NadpPJFsDITef4EYTO6RKSS0ojSmNIz_C6NPEoT_VMa-Z-mCZ9OU7IddG_5j149nM6G1Y79jVk9moavjG5mG19uZt3cUGydR2Nf5L2Hph9ciuWT4vBILB-Lo78SV_tnPwIAAP__2mo9ew==

# Select over two ranges for parent/child with split at grandchild key.
# Also, rows with pid1 <= 30 should have 4 rows whereas pid1 > 30 should
# have 3 rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON parent1.pid1 = child1.pid1 WHERE parent1.pid1 >= 29 AND parent1.pid1 <= 31 ORDER BY parent1.pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUUdFu0zAUfecrru5TywyLU_ZApEoeNIhMJRnpJEAjD1F811nK4mA7CFT131Hsoi2oQ8Abb7n3nONzz8kO7ZcWE9yk6_T1FQymhTdl8Q6u04-X6_Msh9kq21xt3q_ncKA8DYS-NtQ5DhdFlkNzq1rJoch_rp_3SnJYHoAwfXiblinMJozPQxQtaAnxyzmc56tjaLOEBZ9DUa7SEl59mjhUyLDTkvL6jiwm18iR4RlWDHujG7JWm3G986RMfsMkYqi6fnDjumLYaEOY7NAp1xImmHWOTEv1VyqplmQutOrInI7PSnK1ar3Lmm4cjh7qrjbfxeEiZFiq7e1DJMRHhuEdZNjSjZsJfjJfmpHrP5FhMbgEBGciZmLBxAsmzrDaM9SDuz_WunpLmPA9eyTQfQ5tJBmS07MFP8FqfyR1rp_p_jSesB9zjyfu_J_qjP6POo8EKsn2urP0R1VFY9cktxT-jdWDaejS6MbbhLHwOr-QZF1AeRiyzkP-wIdi_lvxYiKOfhXHf-Vc7Z_8CAAA__8HAVEc

# Parent-child where pid1 <= 15 have one joined row and pid1 > 15 have no
# joined rows (since child2 only has 15 rows up to pid1 = 15).
# Note this spans all 5 nodes, which makes sense since we want to read all
# parent rows even if child rows are non-existent (so we can support OUTER
# joins).
# TODO(richardwu): we can remove nodes reading from just one table for INNER
# joins or LEFT/RIGHT joins.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 >= 12 ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzMlFFv0zAUhd_5FdZ5atlFi9N0D5EmBViATCUZ6RCgkYcovusiZXFwHASq-t9RkklbEQPWvvTN9j3H536WfNdov1XwsQwX4etL0ZlKvEmT9-Iq_HyxeBnFYnIWLS-XHxZTcSd5Pgqa3HBtpThPolgUN2WlXPFxGcVvxaQplZyKT-_CNBT9WnztHGfGp0K6IknPwlS8-jIUMhBqrTjOb7mFfwUJggvCDAQPhDkyQmN0wW2rTS9ZD4ZI_YDvEMq66Wx_nBEKbRj-Gra0FcNHVFs2FeffOeVcsTnXZc3m2AFBsc3Lakhc8LVFn1He5uZncEcFQlqubh5WRkQQxntAqPjaTgJ5ND01vXZYgpB01heBpMClwKNgTsEJsg1Bd_a-2dbmK4YvN_QI0D2HNooNq-22A3mEbPMH6li_0M3xfEv9WLq7lS53ek55uM_p7gTkHi7QbCeg2eECeTsBeYcL9I-RlHLb6Lrl__qdTv-9Wa14HAet7kzBF0YXQ8y4TQbfcKC4tWNVjpuoHkpDgw_N8q_mky2z87vZ3Sd5to_Z28c8f5I52zz7FQAA__8hjUPy

# These rows are all on the same node 1 (gateway).
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child2 USING(pid1) WHERE pid1 IN (1, 11, 21, 31) ORDER BY pid1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJyMUE2L2zAQvfdXDHOK24FG6cfBUHDbuK2Da6d2SluCD8aaJALHciV52SX4vy-2Art7WNjbzHtP7-nNBe3_FkMs4zT-uoPBtPCtyH_CPv67TT8nGSzWSbkrf6UBXCWvvaCvDXdOwCZPMmhOqpUr-F0m2XdY9EqKAP78iIsYphkmG0EgBMFKELwTAeTFOi7gy79ZUCFhpyVn9ZkthnsUWBH2RjdsrTYTdJkFibzFcEmoun5wE1wRNtowhhd0yrWMISadY9NyfcMF15LNRquOzdslEkp2tWrnhJQPDqcMda7NXXRtg4SFOp4eM74aEnofJGz54BaReBN8MpN2HpEwH1wIkaBoRdF7ij5Q9BGrkVAP7uGz1tVHxlCM9PJCBdted5afFHjOeTlWhCyP7I9m9WAa3hrdzDF-zed3MyDZOs8KvySdp8ZqfHUfAAD__0Q3qDk=

# Parent-grandchild.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1 JOIN grandchild2 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzsVF1v0zAUfedXXN2nBIwWJxsfliZ5Yh1kKulIi0AaeYjiuy5SFgfHQaCq_x3VaVlala_xwB72Vvuc03N9juMFtp8rFDgdjUevZtCZCs7SyVu4HH28GJ_ECXin8XQ2fTf2YU153BOa3FBtOZxP4gTmJq9VcV1WKoT30zh5DV5TKu7DhzejdASe55bwqQuCiI6Bcx9OklMY7BbHwCPfh0kKu-SX-8gh9_eyo71_HUW-nyHDWitK8htqUVwiR4YhMjzCjGFjdEFtq80KWjhirL6iCBiWddPZ1XbGsNCGUCzQlrYiFBjXlkxF-RdKKVdkznVZkzkIkKEim5eVcxrTlcWVR3mTm29yHR0yB8BZWVkyAjxPDsMQQsTJ7MX6kHIYyA_InVQOU9lA63DkMJkNhgzTcn49HGlQ4Ab9L3P1-SHDiq6sJ_kT_9ishnE_keGkswIkZzJk8pDJIyafMfkcsyVD3dnbnlqbzwkFX7KfdHlbYVdro8iQ2uosW-5pO9FPdXMQ7RD3W4db1vxO14g_XKN7eI3CO3UZPnR5D7v8zfOeUtvouqU_-uKD1ZNBak79-9LqzhR0YXThbPrlxOnchqLW9ijvF3HtIDfgUMx_KT7cEge74vBfnKO_EmfLR98DAAD__37WaD8=

query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
    pid1 >= 11 AND pid1 <= 13
    OR pid1 >= 19 AND pid1 <= 21
    OR pid1 >= 31 AND pid1 <= 33
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzsVF9v0z4Uff99iqv7lPwwWpxsAixV8sQ6yFTSkRaBNPIQxXddpCwOjoNAVb87qtOytCr_xgN72Fvtc07P9TmOl9h-qlDgbDwZv5xDZyo4T6dv4Gr84XJyGifgncWz-eztxIcN5f-esDB5rYqbslIhXEzjBJrcUG05vJvFySvwmlJxH96_Hqdj8Dy3hI9dEEQ0As59OE3OYLBbjIBHvg_TFPbJLw6RQ-4fZEcH_zqKfD9DhrVWlOS31KK4Qo4MQ2R4ghnDxuiC2labNbR0xFh9QREwLOums-vtjGGhDaFYoi1tRSgwri2ZivLPlFKuyFzosiZzFCBDRTYvK-c0oWuLa4_yNjdf5SA6ZA6E87KyZAR4nhwGIoSIk_nzzUHlMJTvkDutHCazhTYByWE6WwwZpuXiZjjWpsAt8k9m6vNDhhVdW0_yJ_7IrIdxP5HhtLMCJGcyZDJi8pjJEyafYbZiqDt711Nr8wWh4Cv2gy7vKuxqbRQZUjudZasDbSf6qW6Ooj3iYetwx5rf6xrxx2v0AK9ReK8uw8cuH2CXv3jeU2obXbf0W198sH4ySC2of19a3ZmCLo0unE2_nDqd21DU2h7l_SKuHeQGHIr5T8XHO-JgXxz-jXP0R-Js9d-3AAAA__868Wg2

query TTT
EXPLAIN SELECT * FROM grandchild2 JOIN parent1 USING(pid1) WHERE
  pid1 >= 11 AND pid1 <= 13
  OR pid1 >= 19 AND pid1 <= 21
  OR pid1 >= 31 AND pid1 <= 33
----
render           ·               ·
 └── merge-join  ·               ·
      │          type            inner
      │          equality        (pid1) = (pid1)
      │          mergeJoinOrder  +"(pid1=pid1)"
      ├── scan   ·               ·
      │          table           grandchild2@primary
      │          spans           /11/#/56/1-/13/#/56/2 /19/#/56/1-/21/#/56/2 /31/#/56/1-/33/#/56/2
      │          filter          ((pid1 <= 13) OR ((pid1 >= 19) AND (pid1 <= 21))) OR (pid1 >= 31)
      └── scan   ·               ·
·                table           parent1@primary
·                spans           /11-/13/# /19-/21/# /31-/33/#
·                parallel        ·
·                filter          ((pid1 <= 13) OR ((pid1 >= 19) AND (pid1 <= 21))) OR (pid1 >= 31)

# Join on multiple interleaved columns with an overarching ancestor (parent1).
# Note there are 5 nodes because the filter cid2 >= 12 AND cid2 <= 14
# creates a giant parent span which requires reading from all rows.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzslU9r20wQxu_vp1jmZL2ZNl5Jzh-BYUPjUAVXTp1AC6kOQjtRBIrWXa1KS_B3L5KsWHLc0jqQXnyzZp6fZ_d5FuYRiq8ZeHA9mU7e3bBSZ-xiPvvAbiefr6ZnfsAG5_71zfXHqcVWkv8bQXyfZtJmlzM_YImOcrkqzAI2GDS_3y5Sydm4265LFjsLzlkrilNpb4iqkvVM5TxXORb79H4yn7BBf-aXcjh0aMxG_T9Z9-IxO7YsNpuvD1ufowW5veWQLcldq2WTHuWerqikpx9xywoBIVeSguiBCvBugQOCDQgOILiAMIIQYaFVTEWhdCV5rAFffgdviJDmi9JU5RAhVprAewSTmozAAz83pDOKvtGcIkn6UqU56cMhIEgyUZrVE6d0Z6CakT5E-odobgYI8zS57zY6HrdddpFmhrRX-Sw69nqe5wc3J6tbi465bWflk-hau0F1jX3CWs7tmLvBuR2DnzhAaG4PCBndmYHgByjsAxTOgTXW1WV6JUCYlcZjgqOwUTgoXBQjFEcojlGcoDiFcImgSrO2vzBRQuDxJf4ionUyZa60JE2yF0W43BJioN6oxeFoQ7h9tN0bzXd6HXz_Ol7vddg7RWTvI3q9iJydInL2Eb1eRO5OEbn7iP7NGtwS0ZyKhcoL-qMtN6zWJMmEmp1aqFLHdKVVXI9pPmc1VxckFabp8ubDz-tWfcAuzH8LH_Xg4SZsv2Sy8xLYfQk8-is4XP73MwAA__8gC4Cq

query TTT
EXPLAIN
  SELECT * FROM child2 JOIN grandchild2 ON
    child2.pid1=grandchild2.pid1
    AND child2.cid2=grandchild2.cid2
    AND child2.cid3=grandchild2.cid3
  WHERE
    child2.pid1 >= 5 AND child2.pid1 <= 7
    OR child2.cid2 >= 12 AND child2.cid2 <= 14
    OR gcid2 >= 49 AND gcid2 <= 51
----
merge-join  ·               ·
 │          type            inner
 │          equality        (pid1, cid2, cid3) = (pid1, cid2, cid3)
 │          mergeJoinOrder  +"(pid1=pid1)",+"(cid2=cid2)",+"(cid3=cid3)"
 ├── scan   ·               ·
 │          table           child2@primary
 │          spans           ALL
 └── scan   ·               ·
·           table           grandchild2@primary
·           spans           ALL
·           filter          (((pid1 >= 5) AND (pid1 <= 7)) OR ((cid2 >= 12) AND (cid2 <= 14))) OR ((gcid2 >= 49) AND (gcid2 <= 51))

# Aggregation over parent and child keys.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT sum(parent1.pid1), sum(child1.cid1) FROM parent1 JOIN child1 USING(pid1) WHERE
    pid1 >= 10 AND pid1 <= 39
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUlVFv2j4Uxd__n8K6T0R_q40ToBAJCbSyLRWFDlptUpeHKLlNI4WYOc60CfHdJ8d0Dah1JuCFt9j3nvzuOY7iNRQ_MvBgMZ6MP9yTUmTk43x2Sx7H3-4mI39KWtf-4n7xZWKRbUtRLlurUGAu2cUqjZlFq63oOc1idhGpHf2KbRO5mflTosvkYeFPP5FWpSNfP4_nY70g30vbdnFAmG2R0fS6vhsNiNu3AqCQ8xin4RIL8B6BAQUHKLhAoQ0UOhBQWAkeYVFwoVrWlcCPf4FnU0jzVSnVdkAh4gLBW4NMZYbggZ9LFBmGP3GOYYzihqc5ikuFiFGGaVYRJ_gkQTHSZSh-D7f-gFYFMiulR4ZqOU-T53qj9v5SeGmkQzW9JgGFDJ9ka8j-twZCdVWPQOFvswvBhgIv5auLQoYJgsc29N-djpJEYBJKLi67u-4WD7etIVPM6smx3gU67wJfOWXORYwC4x1IsDGPxOxDZ3J3ZmIHHbdzhsfd4LSW7dVpjts5KFr3DKNtcFqLtneaaN2Dom2fYbQNTmvR9k8TbfugaO0zjLbBaS3azun__28A51iseF7g3j3w9pttdT9gnKC-TApeigjvBI8qjF7OKl21EWMhdZXphZ_rkhqwLmZGsbMjZvtix0xuQLtGddssbh8zd8co7prJ3WPIV0Zxz0zuHUPum8_KbvhMzB_ZPjvY_PcnAAD__4AGlMA=

###############
# Outer joins #
###############

# The schema/values for each table are as follows:
# Table:        pkey:                     pkey values (same):   values:
# outer_p1      (pid1)                    {1, 2, 3, ... 20}     100 + pkey
# outer_c1      (pid1, cid1, cid2)        {2, 4, 6, ... 28}     200 + pkey
# outer_gc1     (pid1, cid1, cid2, gcid1) {4, 8, 12, ... 36}    300 + pkey

# Split between 4 nodes based on pkey value (p):
# node 1:       p - 1 mod 20 ∈ [1...5)
# node 2:       p - 1 mod 20 ∈ [5...10)
# node 3:       p - 1 mod 20 ∈ [10...15)
# node 4:       p - 1 mod 20 ∈ [15...20)

statement ok
CREATE TABLE outer_p1 (
  pid1 INT PRIMARY KEY,
  pa1 INT
)

statement ok
CREATE TABLE outer_c1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  ca1 INT,
  PRIMARY KEY (pid1, cid1, cid2)
) INTERLEAVE IN PARENT outer_p1 (pid1)

statement ok
CREATE TABLE outer_gc1 (
  pid1 INT,
  cid1 INT,
  cid2 INT,
  gcid1 INT,
  gca1 INT,
  PRIMARY KEY (pid1, cid1, cid2, gcid1)
) INTERLEAVE IN PARENT outer_c1 (pid1, cid1, cid2)

statement ok
ALTER TABLE outer_p1 SPLIT AT
  SELECT i FROM generate_series(0, 40, 5) AS g(i)

statement ok
ALTER TABLE outer_p1 EXPERIMENTAL_RELOCATE
  SELECT ARRAY[(((i-3)/5)%4)::INT + 1], i FROM generate_series(3, 40, 5) AS g(i)

query TTTI colnames
SELECT start_key, end_key, replicas, lease_holder FROM [SHOW EXPERIMENTAL_RANGES FROM TABLE outer_p1]
----
start_key  end_key  replicas  lease_holder
NULL       /0       {5}       5
/0         /5       {1}       1
/5         /10      {2}       2
/10        /15      {3}       3
/15        /20      {4}       4
/20        /25      {1}       1
/25        /30      {2}       2
/30        /35      {3}       3
/35        /40      {4}       4
/40        NULL     {5}       5

### Begin OUTER queries

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 FULL OUTER JOIN outer_c1 USING (pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzclE9r20AQxe_9FMs72e2UeCU5B0FBpbWLgiqnsg2FIIrQTlyBolVXq9Jg_N2LpJTUqfvPvvm2OzNv3vzmMFs0X0r4WM6i2ZuVaE0p5snivbiZfbyOXoexGL0Nl6vlh2gsHkqeDwW6tWw-1VLM11EkrhZh_BDKpVgvw_idGNWFkuMUhEorjrM7buDfQILggOCC4IEwRUqojc65abTpSra9IFTf4E8IRVW3tgunhFwbhr-FLWzJ8BFWlk3J2VdOOFNsrnRRsbnoLBTbrCh7x4hvLTqP4i4z98GPyUFIis3nX1N5lxpagbC6r9kfKBfr1SzpWUEo-daOAvli_Mp0Xfpn15IrxcYX4TxeR9EokBS4YxKBQyLwSARTEsEl0h1Bt_aRrLHZhuHLHf2G_hG6rbRRbFjtUaa7A_uJ9UtdX0yfFB62dvas5VGLd85k8c5R9O6Z0LtH0XtnQu8dRT85E_q_HNyEm1pXDf_TRZl0J4nVhof71ejW5HxtdN7bDN9Fr-sDihs7ZOXwCas-1Q_4s1j-UXy5J548FTunOLuniL1TxNP_Eqe7Z98DAAD__wUTetE=

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_gc1 FULL OUTER JOIN outer_c1 USING (pid1, cid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzklV1r2zAUhu_3K8S5SpYzGtlOtxkGGlsyXDyncxIYFDOMdZoZXMuT5LES8t-H5a5tuu6jyWVuDOfj1evzCI42YL5VEMJiGk_fLVmrKzZL5x_ZxfTzefw2StjgfbRYLj7FQ3bT8rxvUK0l_WVdcDZbxTE7m0fJTa7gbLWIkg9s0JSSIyt-fb1hBgi1kpTkV2QgvAAOCB4g-IAQAMIEMoRGq4KMUbpr2ThBJH9AOEYo66a1XTpDKJQmCDdgS1sRhBDVlnRF-XdKKZekz1RZkz7pLCTZvKycY0yXFjqP8irX1-J2DEBIy_XX32uu1J8FCMvrhsJ-5PlqOU3d4IBQ0aUdCD5C4Y1Q-KPhG92dtpPqLKiWpEMWzZJVHA8ER3E6xNvQQ_HyXuijeDVEJgJkYoJMvIZsi6BaewfB2HxNEPIt_gHUHZ-2VlqSJrkDJNs-gjJRL1RzMnnQ-Li1t2PN97oj7_juyNsLlH98oPy9QAXHByrYC9T4-ED94x1JyTSqNvRf22_crU-Sa-p3rVGtLuhcq8LZ9OHc6VxCkrF9lfdBVLuS-8H7Yv5X8emOePxQ7B3i7B8iDg4RT54kzrbPfgYAAP__gFOvUA==

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_c1 LEFT OUTER JOIN outer_p1 USING (pid1) WHERE pid1 >= 0 AND pid1 < 40]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVF1vlEAUffdXTM7TomPKAPpA0oTGUqVBqCyNJpUYArcrCWVwGIzNZv-7Yahpt9aPbp_2jXvPPfdwTnJnjeFbCx_LMA7f5GxULTvJ0vfsIvx0Fh9FCVscR8t8-SG22M3I83lAjprUl0qwODzJ2WkaJTetXrDzZZS8ZYu-qYXFPr4Ls3Au2OfRtl06ZLbFjpLju82KebZVgKOTNSXlFQ3wLyDA4YDDBYeHgqNXsqJhkGqC12Y4qn_Atzmarh_11C44KqkI_hq60S3BR9RpUi2V3ymjsiZ1KpuO1IENjpp02bRGLaZLjUmjuSrVdfDLITiyZvX1d6ifoHkVOPLrnvw5jfQ8DzOTCThautSLQLywDtW0xXyCIx21zwLBA4cHLg88HrxGseGQo771MehyRfDFhv_B663FsZOqJkX1lqdi80AaiXwp-wPv3uDD0s6WtNgpZrGXMTs7eXX20qu7k1d3L73-46nIaOhlN9B_XYc9nRfVK5pvcZCjquhMycrIzGVqeKZR06BnVMxF1BnI_OBdsvgr-dUW2b5Pdp6i7D6F7D2KXGye_QwAAP__qyUQHg==

query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM outer_p1 RIGHT OUTER JOIN outer_gc1 USING (pid1) WHERE pid1 >= 1 AND pid1 <= 20]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUVO9rnEAQ_d6_YplPsZ0SVy8tCAeGxiaGq6aeoYVUirgTKxjX7q6l4bj_vbheSS5Nf10-3Tdn3rx5vgezK9BfWwhgGS2iNzkbVMveZuk7dhV9vFgcxwk7OImX-fL9wmGbkefTgBwMqc89Z1l8epaz8zRONr264uxyGSen7KBvBHfYh7Moi6aCfRpc16c54w47Tk7uN6s581ynAIROCkrKG9IQXAEHBA8QfECYQYHQK1mR1lKN8MoOx-I7BC5C0_WDGdsFQiUVQbAC05iWIIC4M6RaKr9RRqUgdS6bjtShCwiCTNm0Vm1B1wZGjeamVLfhT5OAkDX1l1-huhqxaRcg5Lc9BZtE0ss8ymwugNDStTkI-QtnrsY99hMQ0sEELPQx9DCcYXiE4SsMX0OxRpCDuTOjTVkTBHyNvzF853PopBKkSGwZK9aPRJLIl7I_nD0YfFza25LmO2XN9zdrbyfD3v4a9ncy7O-v4b88HxnpXnaa_ulY3PHaSNQ0naaWg6roQsnKykxlanm2IUibCeVTEXcWsj94n8z_SD7aIrsPyd5TlP2nkGf_RS7Wz34EAAD__3H4Fpg=

########################
# Non-interleaved joins #
########################

# Join on siblings uses merge joiner.
# TODO(richardwu): Update this once sibling joins are implemented.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child1 JOIN child2 USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8lk1v2zgQhu_7K4jZS7KhQZH6iC1gAS22aeEgsdM4BQoEPigWawtwJJeSgQaB_3shK20Sf3CoEtKNkvho-HKewzxD8X0JIUwuri7-vyNrtSQfb8fX5P7i683Vf8MROfkwnNxNPl-dkpct_9QbZot0mXByOR6O6rUgXybD0SdyskoTfjoFClmeyFH8KAsI74EDBQEUXKDgAQUfphRWKp_JoshVteV5CwyTHxA6FNJstS6r11MKs1xJCJ-hTMulhBDu4oelvJVxIhVzgEIiyzhdbsusVPoYq6eoPh5QmKzirAhJjwn2N_MDxpkn6nWfcSZInCXEJXm5kKqA6YZCvi5fKr8WfHgii7hYvC8VcZhuphSKMp5LCPmG_lkCX5NAdJlAHE3w-p9cJVLJZPc_Z1Vho10HLuNaqrm8zNNMKsZ3-rmU38qTiJ-d_qvS-aJeAoXxugxJxGkkaOTSyKdRQKPznfSvyVyDZOvs0KkPHniU9_IV4_7OzsO1vXe1ubkX3MzsI1r0mFet_eq915blDdIEZpZ3m0YcTdOh8bx944V5n4ShdW_60WPB76YF9bpqWtCWdQ3SnBta12kacTRNh9aJ9q1zzfvkGlp3uDU91m_LtQYZ-oaudZBBHM3QoWFu-4Z55t3xDA3r9xh3fnXId14eqhZxpy3JGsQYGErWTQxxNEaHnnndTowHjnMri1WeFdJoHnSqQDKZy_qainytZvJG5bNtmfpxvOW2E0kii7L-KuqHYVZ_qg5oDgc28MAG5lbn5r6e5g2uTDSDAxt4YANzq3PvXNkeLXZp5y3t6u_b1cL8_Z05u7RnI7geRgTXw4jgehgTHKERwX0bwfUwIrgeRgTXw5jgCI0IHtgIfm6jqB5GFNXDiKJ6GFMUoRFF-zaK6mFEUT2MKKqHMUURGlF0YKMot5oTEBqRFKERSxEa0xTDsVnBbliwmxbsxgXLecFuYOBWEwPfGxka2aqnMVv1NGarnkZtRXDM1ibD0n7PmkxLTWnM1kbzUmMcs3VveNDaOt389TMAAP__xGu2hQ==

# Join on non-interleaved tables (with key) uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN parent2 ON pid1=pid2]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8lVFr2z4Uxd__n0Lc_0u7KsiSHdc1FDy2DlLapGv6MCh-cOO7xJBanuzASsl3H46zpQmJ5CCcp0i2fr4651xy36H8NYcQxjd3N1-eyELNybfH0T15vvnxcPd5MCRnXwfjp_H3u3OyPvKpOVAkCvOKk9vRYLjeCDIakiJLObmuf0QMFHKZ4jB5xRLCZ-BAQQAFFyh4QKEPMYVCyQmWpVT1kfcVMEh_Q-hQyPJiUdWPYwoTqRDCd6iyao4QwlPyMsdHTFJUzAEKKVZJNl-VKVT2mqi3aH1FoDAukrwMSY8J9j_r-4wzTzTrgHEmSJKnxCWymqEqIV5SkItqXXpT8eWNzJJytl0r4hAvYwpllUwRQr6kByRsviNVigrT3e9c1IU3pxb5vnOrWrtW3KOa4q3MclTM3_7sHH9WZxG_OL9W2XTWLIHCaFGFJOI0EjRyaeTtaN7ocVvoOeKmQ9mTBeN85-T-2t5Wbd6-HXjLdjjQDT3m1et-_dzrqjX46VvjssvWEO3jEW3j-RBDj_n_svKbdZ2V31U84vTxBF3G47aPx20bz_5EeizoKhT39KFcdRmK1z4Ur20oQY9x528wfWe9qZPhTle5HKGjr9MhPkxqq-uJg9c7Udtw51RjeM9FHrEsZF5iqyHr1FIwnWLjTikXaoIPSk5WZZrtaMWtZlaKZdW8XW8GefOqvmB72LOBfRs4sIG5QTTfpZ2PtNDDQgvzbdrZpV2bsPSwISw9bAhLDxvCMmg2iPZswurb2K2HDXbrYYPdethgt0GzQbRvY_eljd162GC3HjbYrYcNdhs0G0QHNnZf2dithw1262GD3XrYYLdBs-mf_5hhKY6kPSvat6IDK5qbhB83MePlf38CAAD___svEUg=

# Join on non-interleaved column uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN child1 ON pa1 = ca1]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8ll1r2zAUhu_3K8TZTTsUZMkfTQwFj61jKV3SNb0YFF-4sdYEUtuTHVgp-e_DcbY2H9WRJ5w7O9Fj6dV5Lt5nKH8tIITJxdXFp1uyVAvy5Wb8jdxd_Li--jgckZPPw8nt5PvVKdks-dAsKBIls4qTy_FwRKaz-SLlZDwiRcLJOZkmPAYKWZ7KUfIoSwjvgAMFARRcoOABBR9iCoXKp7Isc1UveV4Dw_Q3hA6FeVYsq_rnmMI0VxLCZ6jm1UJCCLfJ_ULeyCSVijlAIZVVMl-stynU_DFRT9HmfEBhUiRZGZIeE-w98wPGmSea5z7jTJAkS4lL8momVQnxikK-rDZbv-x4_0RmSTnb3isSEK9iCmWVPEgI-Yr-XwT_cITmVrtN4G4lEG8mePnOMstVKpVMt74U1yS25MA1fE3K2WU-z6RifGeSC_mzOonE6bmaP8yqk8g9BQrjZRWSiNNI0MilkUcjfyfxSxrXIs2Bo47yXl4w7u_mPri3t7U3N3eBG-r8hgs95tXPfv2715XaLeIEZmp3nUanOT-y5rxTzYX5bISpaq-G0GPBv0kFzXM9qaAr1VrEOTNUreM0OtXEkVUTnarmms_GNVXt8Dx6rN-VYC1C9A0F6ySDTiv3yFq5nWrlmU_EM9Wq32Pc-TsW39m81HPhTldmtcgxMDSrqxg6ubwjy-UdrQUeOMiNLIs8K6VRx3PqKDJ9kM3VlPlSTeW1yqfrbZrX8Zpbl4xUllXzr2hehlnzV31AcziwgQc2MLc6N_f1NG9xZaIdHNjAAxuYW51758r2aLFLO69pV3_frhbm23fm7NKejeB6GBFcDyOC62FMcIRGBPdtBNfDiOB6GBFcD2OCIzQieGAj-JmNonoYUVQPI4rqYUxRhEYU7dsoqocRRfUwoqgexhRFaETRgY2i3KonIDQiKUIjliI0pimGY13BrizYtQW7umDZF-wKA7dqDHyvMrSyVU9jtuppzFY9jdqK4JitbcrS_szatKW2NGZrq77UGsds3SsPWlvj1bs_AQAA___1lbKo

# Prefix join on interleaved columns uses merge joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid2)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElt9v2joUx9_vX2Gd-9LeGiV2fhQiXSlXd91E1UJXOmlSxUNKPIhEE-YEaVXF_z6FsNFC8IlnEd6S4A_295yPpfMK-fc5BDC6urn6_4Es5Zx8vB_ekserr3c3__UH5OxDf_Qw-nxzTjZL_qkWTGbJPObketgfkKmM0njz4cuoP_hEzhZJzCiZJDE_HwOFNIvFIHoWOQSPwIACBwoOUHCBggdjCguZTUSeZ7Jc8roG-vEPCGwKSbpYFuXnMYVJJgUEr1AkxVxAAA_R01zciygW0rKBQiyKKJmvt1nI5DmSL2F1MKAwWkRpHpCOxa2_Lc-3mOXy6rlrMYuTKI2JQ7JiJmQO4xWFbFlsdt5u-PRCZlE-e79VyGjIYbwaU8iLaCogYCv6ZyG8-hBvStxyEn4wyfavMhkLKeLdv7qgIb8o92-8sqY4t0JOxXWWpEJabKfFc_GtONvQ5__KZDrbvgKF4bIIyDoRDR0aujS8pGGXhr2dmmzDOg3CLtO6ELVnH2SdbGExb2dl_d7uu71Zc2VYM-8PyNKx3PLZK7-7R7wDGoF8jTvQeip-MNUJ7gNr9T7w5i3kDZ1806WO5f9upV89l630j-ikRqBLHSfbTsUPpjqBk7xVJ53mLXQaOlnfsI7VPaKJGjG6Oia2k4UfzHIC_5xW_XObN85t6F-3YzH7V988e_NSNo7ZR1RQI0lPR8HW4vCDcU5goXuySbXmZPciX2RpLhrNoXaZTcRTUVUuz5ZyIu5kNllvU70O19x6_IlFXlS_8uqln1Y_lQdsDvsmcM8EZkbnZp6aZhol43qwbwL3TGBmdO6dku3RfJe239KOut6OEmbva2bv0q6J4GoYEVwNI4KrYUxwhEYE90wEV8OI4GoYEVwNY4IjNCK4byL4pYmiahhRVA0jiqphTFGERhTtmiiqhhFF1TCiqBrGFEVoRNGeiaLMaE5AaERShEYsRWhMUwzHZgWzYcFsWjAbFwznBbOBgRlNDGxvZNCyVU1jtqppzFY1jdqK4JitOsPSfs90piVdGrNVa17SxjFb94YHpa3j1V8_AwAA__-sid2f

# Subset join on interleaved columns uses hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM child2 JOIN grandchild2 USING(pid1, cid3)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzElk1v2zgQhu_7K4jZS7KgIZH6iC1gAS22aesgtdM4BQoEOigWawtwJJeSgQaB_3shyWniL45YwupNlPiIfGeewzxD8X0BAUwury__vyMruSDvb8efyP3l15vr_4YjcvZuOLmbfL4-J5st_zQbpvN0kXByNR6OyEzGWbJ58WUyHH0gZ8s0YZRM08Q5j4BClidiFD-KAoJ7YECBAwUHKLhAwYOIwlLmU1EUuay2PNfAMPkBgU0hzZarsnodUZjmUkDwDGVaLgQEcBc_LMStiBMhLRsoJKKM00V9zFKmj7F8CpuLAYXJMs6KgPQsbv1teb7FLJc3z32LWZzEWUIckpdzIQuI1hTyVbk5-fXAhycyj4v59lEho6ED0TqiUJTxTEDA1vT3QniHQ7wpccdJ-NEkr79aZblMhBTJ1s-iisS2HCjHx7iYX-VpJqTFdnq6EN_Ks_qO5__KdDZ_WQCF8aoMSL2iIaehS0Ofhn0aDnYK8JrMMUh24NqjvJcvLebt1uDg2e7W2ay9H6yd5EfM6Flu9exV790TCq8RyNcQvvNU_GiqLuRnncnP2_eLtxTwTUt6lv-rb37zXPXNP6GAGoEudATsOhU_mqoLAXlnAjrt--W0FPBwd3pW_4TaacTo62jXTRZ-NEsXsjmdyea275LbUrZ-z2L2S5M8e7OousTsE_qmkWSg41tncfjROF0o5_6R6fLApW5FscyzQrSaHe0qlkhmoilTka_kVNzIfFof0yzHNVePLIkoyuYrbxbDrPlUXbA97JvAAxOYGd2beWqaaZSM68G-CTwwgZnRvXdKtkfzXdp-SzvqejtKmG3XzN6lXRPB1TAiuBpGBFfDmOAIjQjumQiuhhHB1TAiuBrGBEdoRHDfRPALE0XVMKKoGkYUVcOYogiNKNo3UVQNI4qqYURRNYwpitCIogMTRZnRnIDQiKQIjViK0JimGI7NCmbDgtm0YDYuGM4LZgMDM5oY2N7IoGWrmsZsVdOYrWoatRXBMVt1hqX9nulMS7o0ZqvWvKSNY7buDQ9KW6P1Xz8DAAD__4Wj0Hs=

# Sort node in between join and child nodes produces hash joiner.
query T
SELECT url FROM [EXPLAIN (DISTSQL) SELECT * FROM parent1 JOIN (SELECT * FROM child1 ORDER BY cid1) USING(pid1)]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJy8lt1uo0YUgO_7FKPTm6QdC2b4MUaqRNt1W69Se2unUqsVF6yZxkgO0AFLjSK_e4WxmxrsOUwQvoPA5zk_38nhFYq_t-DDavow_fGR7OSW_LRc_Eo-T__49PD9bE7uPsxWj6vfHu7J8ZVv6hfySIq0ZOTjonrp_Nl6k2xjRhbLD9Ml-eFPsk5idk9-X83mP5O7vLoJgUKaxWIePYsC_M_AgAIHChZQsIGCAyGFXGZrURSZrF55PQCz-B_wTQpJmu_K6s8hhXUmBfivUCblVoAPj9GXrViKKBbSMIFCLMoo2R6OyWXyHMmX4Bg9UFjlUVr4ZGRw42vDcQ1m2Ly-9gxmcBKlMbFIVm6ELCDcU8h25fHotxO_vJBNVGzOzwoYhPuQQlFGTwJ8tqfvS8G5nEJd5H4ZvEXHdaJbZbIU0mCN4gb8214Vsq7G8PY7uzSTsZAiPvulsCKxVy4k8ktUbD5mSVol0yjzVvxV3gXs_juZPG0OV0BhsSt9EjAacBrYNHCultPukcqFOOfZKMsNbjaTvni2c3Y26y4a6zgrV0QbGXZ17VR_t4eaG4103G5z0zebazOERHqaITbkDLEbz5A73Azx7o3nXT3-X4dHhvufBm59XWngDuWxRjrjjh73zOaax0ikJ4_5kB7zG3s8Hs5jq3vjra4eX272yPCGslcjCa-jve_K4ZqzSHwnZ60hnbVu7Kw3nLN293bbXZ31RgYzTz13zONN1XRmDqWtRh6Tjtq-N41r5iIhnsy1hzTXvrG5k9t8eV-IYimKPEsL0em72qzyEPGTqOtSZDu5Fp9ktj4cU98uDtzhwysWRVk_teqbWVo_qgLsDnt9YMZ70W4fmptqmjVp84w-g80mzDUKzvVgrw_cKLgu7fahGwVv0Zay4La6W7a6W0zdLqfPfKhhZD7UMDYfCI3Mh5rG5sNVVnysLvi4z3yoYWQ-1DA2HwiNzIeaxubD6zMfkz6Gq2HEcDWMGY7QiOFqGt0ArQVyVnGG_FNhrQ2iIzlCI5YjNKY5hiOeIzgmOmvtER3TWWuP6KiO0IjrCI3JjuGI7QiO6q7eocxBdNdZou2e62xRXRrVXWuP6uKo7upNiumus0p1aUx3rWWqjWO6a63TNq7ep2yC6K6zUds911mpujSqu9ZS1cUx3bl6qzZ1D_df_RsAAP__ilK74Q==

query TTT
EXPLAIN SELECT * FROM parent1 JOIN (SELECT * FROM child1 ORDER BY cid1) USING (pid1)
----
render               ·         ·
 └── hash-join       ·         ·
      │              type      inner
      │              equality  (pid1) = (pid1)
      ├── scan       ·         ·
      │              table     parent1@primary
      │              spans     ALL
      └── sort       ·         ·
           │         order     +cid1
           └── scan  ·         ·
·                    table     child1@primary
·                    spans     ALL

# Multi-table staggered join uses interleaved joiner on the bottom join
# and a merge joiner.
query T
SELECT url FROM[EXPLAIN (DISTSQL)
  SELECT * FROM grandchild1
  JOIN child1 USING (pid1, cid1)
  JOIN parent1 USING (pid1)
ORDER BY pid1
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzcll1v6jYYx-_3KaxnN2U1Spy3QqRJ2VY2UVHooJN2VHGREhcipQnHCUenqvjuRyG0DS_1k2BxkLiLY__88vhn6f8K6dcIXBh1ep2_7slCROTv4eCWPHT-v-v90e2Ti-vu6H70b69B1kN-KwZMhR8Hk1kYBYzcDLp9sv7-b9Tt_0Mu5mHAKJmEAWsU3XNf8Djb6G-QwfC6MyR_fiF5cwwU4iTgff-Zp-A-AAMKBlAwgYIFFGwYU5iLZMLTNBH5kNcV0A2-g6tTCOP5Ist_jylMEsHBfYUszCIOLnTjjIuI-9_4kPsBFzdJGHOh6UAh4JkfRqsVe_wpg3yN8NkXL17pjEBhGE5n5d73jmIuoBDxp-zCY5fUMy4bv4t8_HsTKAwWmUs8Rj2Deib1LOpdwXhJIVlk641_7Pfxhcz8dLa5PY_BeDmmkGb-lIPLlrR6Ae79x2h9ds3enPbtQOsrAgqjuR-nLmlqhvarZjsa0yyj-G5pTDOIHwfEJEk24yJVOoLx6RE-5klEwAUPtue5zBeuNGpPNW65mPK1A2xLgrdbLN3g_tuzdy_w42Sm2sn27LmfNJO5xjYv77PlrY3l2UGPg53P40AKUH4cTsXH8cnbaGpW_m3n_61jPRR2mofCjv9QjINMNc7HVKQAZVOvqppaMrKpOe_aOsV3rq1zLFON05hqHN9U8yBTzfMxFSlA2dRWVVP3y9nUWsfy0zyNn-bx_bQO8tM6Hz-RApT9bFf1s9XUmP7mqK2vG7mkTD-WotZpFLV-bires50hT-dJnPJKgVfPD8SDKS_KlCYLMeF3IpmslimagxW3ik8BT7Oi1yga3bjoyjdYHXZU4LYKzJT2zWw5zWqUzKgHOypwWwVmSvveKtkObWzTepk25fU2pTDbrJm-TVsqgsthRHA5jAguhzHBERoR3FYRXA4jgsthRHA5jAmO0IjgjorgVyqKymFEUTmMKCqHMUURGlG0paKoHEYUlcOIonIYUxShEUXbKooypZyA0IikCI1YitCYphiOZQW1sKCWFtTigmJeUAsMTCkxsJ3IUMtWOY3ZKqcxW-U0aiuCY7bWCUu7d1YnLdWlMVtr5aXaOGbrTniQ2jpe_vIjAAD___IUKxQ=

# Multi-table join with parent1 and child1 at the bottom uses interleaved
# joiner but induces a hash joiner on the higher join.
query T
SELECT url FROM [EXPLAIN (DISTSQL)
  SELECT * FROM parent1
  JOIN child1 USING (pid1)
  JOIN grandchild1 USING (pid1, cid1)
]
----
https://cockroachdb.github.io/distsqlplan/decode.html#eJzUll2P4jYUhu_7K9zTm5nWyLHzMRCpUqp22rKisIVZqdIqF1nihUjZhDqh6mrEf69CmBI-xmeCRSTuCPZj-9jPkd5nKP5OwYfZ4-jx5yeyVin5dTr5g3x8_Ov96KfhmNz9Mpw9zf4c3ZPdlO_rCatIyazk5N1kOCbzZZLGnHyYDce_kbtVEvP7emChoiw-HaVkXs0JgUKWx3IcfZEF-B-BAwUBFGyg4AAFF0IKK5XPZVHkqpryvAWG8b_gWxSSbLUuq79DCvNcSfCfoUzKVIIPw6yUKpXRP3Iqo1iqd3mSScUsoBDLMkrS7Y4j-bmEao_kS6S-BruqgMI0WSybI3URQKFeByik8nN5F_Af7n9U1dztT6AwWZc-CTgNBA0cGrgQbijk63J30v0BP30ly6hYHp6nAm0INyGFoowWEny-oW8v-in6lO7qZe7hyi-FNJ4EKMxWUVb4pMcE-465HuPMEUywb8cfRiPm9hlngkRZTGySl0upivbViINqxKvV7JdaZ7mKpZLxwWJhRWJTzlzJ71Gx3L09P3r83QvSwN6_IQ3EwSvaLw_5QIP-UfX7smyDss6ceZz38hXj7vEFnN3bOdibX9QV_La7Aim62RVei67QNEWPOdWYW405V-wQ3nGH8G46RFxkqbhtS5Gim5Y-tLG0YWKPef8r6zGvqax3RUtFx5aKbiy1L7LUvm1LkaKblvbbWPq6mD3Wv6Kbdsdu2t246VzkpnPbbiJFN90ctHGz32PcevHTtaqPhqDcuqKeTsd6Ot1H4DMnmspilWeFfFPAtaqaZLyQ9R0V-VrN5XuVz7fb1J-TLbfNS7EsynpU1B_DrB6qDvh22DOBByYwNzo3d_U0b3Floh3smcADE5gbnfvoyk5ocUxbTdrW37ethfnhnVnHtGMiuB5GBNfDiOB6GBMcoRHBXRPB9TAiuB5GBNfDmOAIjQjumQj-YKKoHkYU1cOIonoYUxShEUX7JorqYURRPYwoqocxRREaUXRgoig3ygkIjUiK0IilCI1piuFYVjALC2ZpwSwuGOYFs8DAjRIDP4kMrWzV05itehqzVU-jtiI4ZmubsHT6Zm3SUlsas7VVXmqNY7aehAetreHmm_8CAAD__9VGKxU=
