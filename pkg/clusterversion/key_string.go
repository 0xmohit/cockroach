// Code generated by "stringer -type=Key"; DO NOT EDIT.

package clusterversion

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Start20_2-0]
	_ = x[MinPasswordLength-1]
	_ = x[CreateLoginPrivilege-2]
	_ = x[HBAForNonTLS-3]
	_ = x[V20_2-4]
	_ = x[Start21_1-5]
	_ = x[CPutInline-6]
	_ = x[ReplicaVersions-7]
	_ = x[replacedTruncatedAndRangeAppliedStateMigration-8]
	_ = x[replacedPostTruncatedAndRangeAppliedStateMigration-9]
	_ = x[TruncatedAndRangeAppliedStateMigration-10]
	_ = x[PostTruncatedAndRangeAppliedStateMigration-11]
	_ = x[SeparatedIntents-12]
	_ = x[TracingVerbosityIndependentSemantics-13]
	_ = x[PriorReadSummaries-14]
	_ = x[NonVotingReplicas-15]
	_ = x[V21_1-16]
	_ = x[Start21_1PLUS-17]
	_ = x[Start21_2-18]
	_ = x[JoinTokensTable-19]
	_ = x[AcquisitionTypeInLeaseHistory-20]
	_ = x[SerializeViewUDTs-21]
	_ = x[ExpressionIndexes-22]
	_ = x[DeleteDeprecatedNamespaceTableDescriptorMigration-23]
	_ = x[FixDescriptors-24]
	_ = x[SQLStatsTable-25]
	_ = x[DatabaseRoleSettings-26]
	_ = x[TenantUsageTable-27]
	_ = x[SQLInstancesTable-28]
	_ = x[NewRetryableRangefeedErrors-29]
	_ = x[AlterSystemWebSessionsCreateIndexes-30]
	_ = x[SeparatedIntentsMigration-31]
	_ = x[PostSeparatedIntentsMigration-32]
	_ = x[RetryJobsWithExponentialBackoff-33]
	_ = x[RecordsBasedRegistry-34]
	_ = x[AutoSpanConfigReconciliationJob-35]
	_ = x[PreventNewInterleavedTables-36]
	_ = x[EnsureNoInterleavedTables-37]
	_ = x[DefaultPrivileges-38]
	_ = x[ZonesTableForSecondaryTenants-39]
	_ = x[UseKeyEncodeForHashShardedIndexes-40]
	_ = x[DatabasePlacementPolicy-41]
	_ = x[GeneratedAsIdentity-42]
	_ = x[OnUpdateExpressions-43]
	_ = x[SpanConfigurationsTable-44]
	_ = x[BoundedStaleness-45]
	_ = x[SQLStatsCompactionScheduledJob-46]
	_ = x[DateAndIntervalStyle-47]
}

const _Key_name = "Start20_2MinPasswordLengthCreateLoginPrivilegeHBAForNonTLSV20_2Start21_1CPutInlineReplicaVersionsreplacedTruncatedAndRangeAppliedStateMigrationreplacedPostTruncatedAndRangeAppliedStateMigrationTruncatedAndRangeAppliedStateMigrationPostTruncatedAndRangeAppliedStateMigrationSeparatedIntentsTracingVerbosityIndependentSemanticsPriorReadSummariesNonVotingReplicasV21_1Start21_1PLUSStart21_2JoinTokensTableAcquisitionTypeInLeaseHistorySerializeViewUDTsExpressionIndexesDeleteDeprecatedNamespaceTableDescriptorMigrationFixDescriptorsSQLStatsTableDatabaseRoleSettingsTenantUsageTableSQLInstancesTableNewRetryableRangefeedErrorsAlterSystemWebSessionsCreateIndexesSeparatedIntentsMigrationPostSeparatedIntentsMigrationRetryJobsWithExponentialBackoffRecordsBasedRegistryAutoSpanConfigReconciliationJobPreventNewInterleavedTablesEnsureNoInterleavedTablesDefaultPrivilegesZonesTableForSecondaryTenantsUseKeyEncodeForHashShardedIndexesDatabasePlacementPolicyGeneratedAsIdentityOnUpdateExpressionsSpanConfigurationsTableBoundedStalenessSQLStatsCompactionScheduledJobDateAndIntervalStyle"

var _Key_index = [...]uint16{0, 9, 26, 46, 58, 63, 72, 82, 97, 143, 193, 231, 273, 289, 325, 343, 360, 365, 378, 387, 402, 431, 448, 465, 514, 528, 541, 561, 577, 594, 621, 656, 681, 710, 741, 761, 792, 819, 844, 861, 890, 923, 946, 965, 984, 1007, 1023, 1053, 1073}

func (i Key) String() string {
	if i < 0 || i >= Key(len(_Key_index)-1) {
		return "Key(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Key_name[_Key_index[i]:_Key_index[i+1]]
}
