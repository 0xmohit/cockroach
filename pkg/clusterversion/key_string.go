// Code generated by "stringer -type=Key"; DO NOT EDIT.

package clusterversion

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Start20_2-0]
	_ = x[MinPasswordLength-1]
	_ = x[AbortSpanBytes-2]
	_ = x[CreateLoginPrivilege-3]
	_ = x[HBAForNonTLS-4]
	_ = x[V20_2-5]
	_ = x[Start21_1-6]
	_ = x[CPutInline-7]
	_ = x[ReplicaVersions-8]
	_ = x[replacedTruncatedAndRangeAppliedStateMigration-9]
	_ = x[replacedPostTruncatedAndRangeAppliedStateMigration-10]
	_ = x[TruncatedAndRangeAppliedStateMigration-11]
	_ = x[PostTruncatedAndRangeAppliedStateMigration-12]
	_ = x[SeparatedIntents-13]
	_ = x[TracingVerbosityIndependentSemantics-14]
	_ = x[PriorReadSummaries-15]
	_ = x[NonVotingReplicas-16]
	_ = x[V21_1-17]
	_ = x[Start21_1PLUS-18]
	_ = x[Start21_2-19]
	_ = x[JoinTokensTable-20]
	_ = x[AcquisitionTypeInLeaseHistory-21]
	_ = x[SerializeViewUDTs-22]
	_ = x[ExpressionIndexes-23]
	_ = x[DeleteDeprecatedNamespaceTableDescriptorMigration-24]
	_ = x[FixDescriptors-25]
	_ = x[SQLStatsTable-26]
	_ = x[DatabaseRoleSettings-27]
	_ = x[TenantUsageTable-28]
	_ = x[SQLInstancesTable-29]
	_ = x[NewRetryableRangefeedErrors-30]
	_ = x[AlterSystemWebSessionsCreateIndexes-31]
	_ = x[SeparatedIntentsMigration-32]
	_ = x[PostSeparatedIntentsMigration-33]
	_ = x[RetryJobsWithExponentialBackoff-34]
	_ = x[RecordsBasedRegistry-35]
	_ = x[AutoSpanConfigReconciliationJob-36]
	_ = x[PreventNewInterleavedTables-37]
	_ = x[EnsureNoInterleavedTables-38]
	_ = x[DefaultPrivileges-39]
	_ = x[ZonesTableForSecondaryTenants-40]
	_ = x[UseKeyEncodeForHashShardedIndexes-41]
	_ = x[DatabasePlacementPolicy-42]
	_ = x[GeneratedAsIdentity-43]
	_ = x[OnUpdateExpressions-44]
	_ = x[SpanConfigurationsTable-45]
	_ = x[BoundedStaleness-46]
	_ = x[SQLStatsCompactionScheduledJob-47]
	_ = x[DateAndIntervalStyle-48]
}

const _Key_name = "Start20_2MinPasswordLengthAbortSpanBytesCreateLoginPrivilegeHBAForNonTLSV20_2Start21_1CPutInlineReplicaVersionsreplacedTruncatedAndRangeAppliedStateMigrationreplacedPostTruncatedAndRangeAppliedStateMigrationTruncatedAndRangeAppliedStateMigrationPostTruncatedAndRangeAppliedStateMigrationSeparatedIntentsTracingVerbosityIndependentSemanticsPriorReadSummariesNonVotingReplicasV21_1Start21_1PLUSStart21_2JoinTokensTableAcquisitionTypeInLeaseHistorySerializeViewUDTsExpressionIndexesDeleteDeprecatedNamespaceTableDescriptorMigrationFixDescriptorsSQLStatsTableDatabaseRoleSettingsTenantUsageTableSQLInstancesTableNewRetryableRangefeedErrorsAlterSystemWebSessionsCreateIndexesSeparatedIntentsMigrationPostSeparatedIntentsMigrationRetryJobsWithExponentialBackoffRecordsBasedRegistryAutoSpanConfigReconciliationJobPreventNewInterleavedTablesEnsureNoInterleavedTablesDefaultPrivilegesZonesTableForSecondaryTenantsUseKeyEncodeForHashShardedIndexesDatabasePlacementPolicyGeneratedAsIdentityOnUpdateExpressionsSpanConfigurationsTableBoundedStalenessSQLStatsCompactionScheduledJobDateAndIntervalStyle"

var _Key_index = [...]uint16{0, 9, 26, 40, 60, 72, 77, 86, 96, 111, 157, 207, 245, 287, 303, 339, 357, 374, 379, 392, 401, 416, 445, 462, 479, 528, 542, 555, 575, 591, 608, 635, 670, 695, 724, 755, 775, 806, 833, 858, 875, 904, 937, 960, 979, 998, 1021, 1037, 1067, 1087}

func (i Key) String() string {
	if i < 0 || i >= Key(len(_Key_index)-1) {
		return "Key(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Key_name[_Key_index[i]:_Key_index[i+1]]
}
